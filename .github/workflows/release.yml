name: Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build Go binaries
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o IsaacCoyote_x64.exe -trimpath -ldflags "-s -w" cmd/main.go
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o IsaacCoyote_x86.exe -trimpath -ldflags "-s -w" cmd/main.go

      - name: Install UPX
        run: sudo apt-get update && sudo apt-get install -y upx

      - name: Compress binaries with UPX
        run: |
          upx --best --lzma IsaacCoyote_x64.exe -o IsaacCoyote_x64-compressed.exe
          upx --best --lzma IsaacCoyote_x86.exe -o IsaacCoyote_x86-compressed.exe

      - name: Prepare release assets
        run: |
          mkdir -p release-package
          
          mv IsaacCoyote_x64-compressed.exe release-package/IsaacCoyote_x64.exe
          mv IsaacCoyote_x86-compressed.exe release-package/IsaacCoyote_x86.exe
          
          cp config.yaml release-package/
          cp -r resources release-package/
          cp -r isaac-mod/isaac-coyote release-package/
          
          cd release-package
          zip -r ../IsaacCoyote-${{ github.ref_name }}.zip ./*
          cd ..

      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --abbrev=0 --tags ${{ github.ref_name }}^ 2>/dev/null || :)
          
          if [ -z "$PREV_TAG" ]; then
            changelog=$(git log --pretty=format:"- %s (%h)")
          else
            changelog=$(git log --pretty=format:"- %s (%h)" $PREV_TAG..${{ github.ref_name }})
          fi
          
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "## Changes since $PREV_TAG" >> $GITHUB_ENV
          echo "$changelog" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          body: |
            ### Changelog
            ${{ env.CHANGELOG }}
            
            ### SHA256 Checksum
            ```sh
            sha256sum IsaacCoyote-${{ github.ref_name }}.zip
            ```
          files: |
            IsaacCoyote-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
